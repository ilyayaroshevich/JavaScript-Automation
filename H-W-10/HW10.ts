/*
#### Task 1 üíª
–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car. –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞ SportCar –∏ LuxuryCar. 
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ –∏ —Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è. 
–î–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –º–µ—Ç–æ–¥—ã –≤—ã–≤–æ–¥—è—â–∏–µ –º–∞–∫—Å–∏–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Ü–µ–Ω—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ç–∏–ø—ã –∞–≤—Ç–æ. 
–í—ã–≤–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–∏–º: `This is <carName>. It has <engineType> engine and max speed equal to <maxSpeed>. Approximetly cost of the car is <carCost>`. 
(–í –∑–∞–¥–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ public –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ)
*/
console.log(`Task 1:`);
{
    class Car {
        constructor(protected typeOfCar: string, protected typeOfEngine: string) { };

        public getCarInfo(): string {
            return `This is ${this.typeOfCar}. It has ${this.typeOfEngine} engine`;
        };
    };

    class SportCar extends Car {
        constructor(typeOfCar: string, typeOfEngine: string, private maxSpeed: number, private price: number) {
            super(typeOfCar, typeOfEngine);
        };

        public getCarInfo(): string {
            return `${super.getCarInfo()} and max speed equal to ${this.maxSpeed}. Approximate cost of the car is ${this.price}.`;
        };
    };

    class LuxuryCar extends Car {
        constructor(typeOfCar: string, typeOfEngine: string, private maxSpeed: number, private price: number) {
            super(typeOfCar, typeOfEngine);
        };

        public getCarInfo(): string {
            return `${super.getCarInfo()} and max speed equal to ${this.maxSpeed}. Approximate cost of the car is ${this.price}.`;
        };
    };
    let luxuryCar1 = new LuxuryCar('Mercedes-Benz', 'ICE', 300, 2000000);
    console.log(luxuryCar1.getCarInfo());

    let sportCar1 = new SportCar('BMW', 'Electric', 220, 1000000);
    console.log(sportCar1.getCarInfo());
}
/*
#### Task 2 üíª
–°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ Person. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É `My name is <this.name>`. 
–ò –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç–≤—É—é—â–µ–µ –∏–º—è
*/
console.log(`Task 2:`);
{
    let freePreson: { name: string } = {
        name: 'Ilya1'
    };

    let busyPreson: { name: string } = {
        name: 'Ilya2'
    };

    function getMyNameIs() {
        return `My name is ${this.name}`
    };

    console.log(getMyNameIs.call(freePreson));
    console.log(getMyNameIs.call(busyPreson));
}
/*
#### Task 3 üíª
–°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –º–∞—à–∏–Ω. 
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥—è—â–∏–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–≤–µ—Ä–µ–π –º–∞—à–∏–Ω—ã, –∏ —Å –∫–∞–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä—É–ª—å. 
–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç–≤—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–∞—Ö. 
–ö –ø—Ä–∏–º–µ—Ä—É `This car has 3 doors and this is left-hand drive car`
*/
console.log(`Task 3:`);
{
    let firstCar: { myCar: string } = {
        myCar: "Maybach"
    };

    let secondCar: { myCar: string } = {
        myCar: "Toyota"
    };

    function getCarInfoCar(amountOfDoors: number, steeringPosition: string) {
        return `${this.myCar} has ${amountOfDoors} doors and this is ${steeringPosition}-hand drive car`
    };

    console.log(getCarInfoCar.call(firstCar, 4, 'left'));
    console.log(getCarInfoCar.call(secondCar, 3, 'right'));
}