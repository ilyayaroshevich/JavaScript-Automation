/*
#### Task 1 üíª
–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car. –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞ SportCar –∏ LuxuryCar. 
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ –∏ —Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è. 
–î–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –º–µ—Ç–æ–¥—ã –≤—ã–≤–æ–¥—è—â–∏–µ –º–∞–∫—Å–∏–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Ü–µ–Ω—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ç–∏–ø—ã –∞–≤—Ç–æ. 
–í—ã–≤–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–∏–º: `This is <carName>. It has <engineType> engine and max speed equal to <maxSpeed>. Approximetly cost of the car is <carCost>`. 
(–í –∑–∞–¥–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ public –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ)
*/
{
    class Car {
        constructor(protected typeOfCar: string, protected typeOfEngine: string) {}
    
        public getCarInfo(): string {
            return `This is ${this.typeOfCar}. It has ${this.typeOfEngine} engine`;
        }
    }
    
    class SportCar extends Car {
        constructor(typeOfCar: string, typeOfEngine: string, private maxSpeed: number, private price: number) {
            super(typeOfCar, typeOfEngine);
        }
    
        public getCarInfo(): string {
            return `${super.getCarInfo()} and max speed equal to ${this.maxSpeed}. Approximate cost of the car is ${this.price}.`;
        }
    }
    
    class LuxuryCar extends Car {
        constructor(typeOfCar: string, typeOfEngine: string, private maxSpeed: number, private price: number) {
            super(typeOfCar, typeOfEngine);
        }
    
        public getCarInfo(): string {
            return `${super.getCarInfo()} and max speed equal to ${this.maxSpeed}. Approximate cost of the car is ${this.price}.`;
        }
    }
    let luxuryCar1 = new LuxuryCar('Mercedes-Benz', 'ICE', 300, 2000000);
    console.log(luxuryCar1.getCarInfo());
    
    let sportCar1 = new SportCar('BMW', 'Electric', 220, 1000000);
    console.log(sportCar1.getCarInfo());
}